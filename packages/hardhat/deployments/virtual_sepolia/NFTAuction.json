{
  "address": "0xde060555bDCa853cFBd5e49101033aF70327D2Ac",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startingBid",
          "type": "uint256"
        }
      ],
      "name": "AuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AuctionSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BidPlaced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auctionContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auctionTokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auctions",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "highestBidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "highestBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "settled",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startingBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllActiveAuctions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "highestBidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "highestBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "settled",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFTAuction.Auction[]",
          "name": "activeAuctions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAuctions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "highestBidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "highestBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "settled",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFTAuction.Auction[]",
          "name": "allAuctions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getAuction",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "highestBidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "highestBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "settled",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFTAuction.Auction",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isAuctionSettled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "settleAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "settledAuctions",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "highestBidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "highestBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "settled",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3f5ebc6e075b99b163c186264d610d692b75f2b1a065ad3a0d32ea8345136b7a",
  "receipt": {
    "to": null,
    "from": "0x3506F4f7102EC939EFdeD1a91664bb34184f0209",
    "contractAddress": "0xde060555bDCa853cFBd5e49101033aF70327D2Ac",
    "transactionIndex": 0,
    "gasUsed": "1593076",
    "logsBloom": "0x
    "blockHash": "0x5ae527ac6ed1c638d937246b24ea2273ae6b3cf567b54440626f87dc9d2f5a00",
    "transactionHash": "0x3f5ebc6e075b99b163c186264d610d692b75f2b1a065ad3a0d32ea8345136b7a",
    "logs": [],
    "blockNumber": 7272146,
    "cumulativeGasUsed": "1593076",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3506F4f7102EC939EFdeD1a91664bb34184f0209",
    250
  ],
  "numDeployments": 1,
  "solcInputHash": "678accbf2532dc9918a2708046672a0c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startingBid\",\"type\":\"uint256\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AuctionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctionContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctionTokenIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllActiveAuctions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTAuction.Auction[]\",\"name\":\"activeAuctions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAuctions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTAuction.Auction[]\",\"name\":\"allAuctions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAuction\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTAuction.Auction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isAuctionSettled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"settleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"settledAuctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTAuction.sol\":\"NFTAuction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/NFTAuction.sol\":{\"content\":\"pragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\ncontract NFTAuction is ReentrancyGuard {\\n    struct Auction {\\n        address seller;\\n        address highestBidder;\\n        uint256 highestBid;\\n        uint256 endTime;\\n        bool settled;\\n        address nftContract;\\n        uint256 tokenId;\\n    }\\n\\n    mapping(address => mapping(uint256 => Auction)) public auctions;\\n    mapping(address => mapping(uint256 => Auction)) public settledAuctions;\\n    address[] public auctionContracts;\\n    mapping(address => uint256[]) public auctionTokenIds;\\n    address public feeRecipient;\\n    uint256 public feePercent;\\n    \\n    event AuctionCreated(address indexed nftContract, uint256 indexed tokenId, uint256 endTime, uint256 startingBid);\\n    event BidPlaced(address indexed nftContract, uint256 indexed tokenId, address bidder, uint256 amount);\\n    event AuctionSettled(address indexed nftContract, uint256 indexed tokenId, address winner, uint256 amount);\\n\\n    constructor(address _feeRecipient, uint256 _feePercent) {\\n        feeRecipient = _feeRecipient;\\n        feePercent = _feePercent;\\n    }\\n\\n    function createAuction(address nftContract, uint256 tokenId, uint256 startingBid, uint256 duration) external {\\n        require(auctions[nftContract][tokenId].endTime == 0, \\\"Auction already exists\\\");\\n        require(startingBid > 0, \\\"Starting bid must be greater than zero\\\");\\n        require(duration > 0, \\\"Duration must be greater than zero\\\");\\n        IERC721 nft = IERC721(nftContract);\\n        require(nft.ownerOf(tokenId) == msg.sender, \\\"Not the NFT owner\\\");\\n\\n        nft.transferFrom(msg.sender, address(this), tokenId);\\n\\n        uint256 endTime = block.timestamp + duration;\\n        auctions[nftContract][tokenId] = Auction({\\n            seller: msg.sender,\\n            highestBidder: address(0),\\n            highestBid: startingBid,\\n            endTime: endTime,\\n            settled: false,\\n            nftContract: nftContract,\\n            tokenId: tokenId\\n        });\\n\\n        if (auctionTokenIds[nftContract].length == 0) {\\n            auctionContracts.push(nftContract);\\n        }\\n        auctionTokenIds[nftContract].push(tokenId);\\n\\n        emit AuctionCreated(nftContract, tokenId, endTime, startingBid);\\n    }\\n\\n    function placeBid(address nftContract, uint256 tokenId) external payable nonReentrant {\\n        Auction storage auction = auctions[nftContract][tokenId];\\n        require(block.timestamp < auction.endTime, \\\"Auction ended\\\");\\n        require(msg.sender != auction.seller, \\\"Seller cannot bid on their own auction\\\");\\n        require(msg.value > auction.highestBid, \\\"Bid too low\\\");\\n\\n        if (auction.highestBid > 0 && auction.highestBidder != address(0)) {\\n            address previousBidder = auction.highestBidder;\\n            uint256 previousBid = auction.highestBid;\\n\\n            (bool refundSuccess, ) = previousBidder.call{ value: previousBid }(\\\"\\\");\\n            require(refundSuccess, \\\"Refund to previous bidder failed\\\");\\n        }\\n\\n        auction.highestBid = msg.value;\\n        auction.highestBidder = msg.sender;\\n\\n        emit BidPlaced(nftContract, tokenId, msg.sender, msg.value);\\n    }\\n\\n    function settleAuction(address nftContract, uint256 tokenId) external nonReentrant {\\n        Auction storage auction = auctions[nftContract][tokenId];\\n        require(auction.endTime > 0, \\\"Auction does not exist\\\");\\n        require(block.timestamp >= auction.endTime, \\\"Auction not ended\\\");\\n        require(!auction.settled, \\\"Auction already settled\\\");\\n        require(\\n            msg.sender == auction.seller || msg.sender == auction.highestBidder,\\n            \\\"Only the seller or highest bidder can settle the auction\\\"\\n        );\\n\\n        auction.settled = true;\\n\\n        if (auction.highestBid > 0 && auction.highestBidder != address(0)) {\\n            uint256 fee = (auction.highestBid * feePercent) / 10000;\\n            uint256 sellerProceeds = auction.highestBid - fee;\\n\\n            (bool feeTransferSuccess, ) = feeRecipient.call{ value: fee }(\\\"\\\");\\n            require(feeTransferSuccess, \\\"Fee transfer failed\\\");\\n\\n            (bool sellerTransferSuccess, ) = auction.seller.call{ value: sellerProceeds }(\\\"\\\");\\n            require(sellerTransferSuccess, \\\"Seller transfer failed\\\");\\n\\n            IERC721(nftContract).transferFrom(address(this), auction.highestBidder, tokenId);\\n        } else {\\n            IERC721(nftContract).transferFrom(address(this), auction.seller, tokenId);\\n        }\\n\\n        settledAuctions[nftContract][tokenId] = auction;\\n\\n        delete auctions[nftContract][tokenId];\\n        _removeAuction(nftContract, tokenId);\\n\\n        emit AuctionSettled(nftContract, tokenId, auction.highestBidder, auction.highestBid);\\n    }\\n\\n    function getAuction(address nftContract, uint256 tokenId) external view returns (Auction memory) {\\n        return auctions[nftContract][tokenId];\\n    }\\n\\n    function getAllActiveAuctions() external view returns (Auction[] memory activeAuctions) {\\n        uint256 totalActive = 0;\\n\\n        for (uint256 i = 0; i < auctionContracts.length; i++) {\\n            address nftContract = auctionContracts[i];\\n            uint256[] storage tokenIds = auctionTokenIds[nftContract];\\n            for (uint256 j = 0; j < tokenIds.length; j++) {\\n                if (!auctions[nftContract][tokenIds[j]].settled) {\\n                    totalActive++;\\n                }\\n            }\\n        }\\n\\n        activeAuctions = new Auction[](totalActive);\\n        uint256 index = 0;\\n\\n        for (uint256 i = 0; i < auctionContracts.length; i++) {\\n            address nftContract = auctionContracts[i];\\n            uint256[] storage tokenIds = auctionTokenIds[nftContract];\\n            for (uint256 j = 0; j < tokenIds.length; j++) {\\n                Auction storage auction = auctions[nftContract][tokenIds[j]];\\n                if (!auction.settled) {\\n                    activeAuctions[index] = auction;\\n                    index++;\\n                }\\n            }\\n        }\\n\\n        return activeAuctions;\\n    }\\n\\n    function getAllAuctions() external view returns (Auction[] memory allAuctions) {\\n        uint256 totalAuctions = 0;\\n\\n        for (uint256 i = 0; i < auctionContracts.length; i++) {\\n            totalAuctions += auctionTokenIds[auctionContracts[i]].length;\\n        }\\n\\n        allAuctions = new Auction[](totalAuctions);\\n        uint256 index = 0;\\n\\n        for (uint256 i = 0; i < auctionContracts.length; i++) {\\n            address nftContract = auctionContracts[i];\\n            uint256[] storage tokenIds = auctionTokenIds[nftContract];\\n            for (uint256 j = 0; j < tokenIds.length; j++) {\\n                allAuctions[index] = auctions[nftContract][tokenIds[j]];\\n                index++;\\n            }\\n        }\\n\\n        return allAuctions;\\n    }\\n\\n    function isAuctionSettled(address nftContract, uint256 tokenId) external view returns (bool) {\\n        return settledAuctions[nftContract][tokenId].endTime != 0;\\n    }\\n\\n\\n    function _removeAuction(address nftContract, uint256 tokenId) internal {\\n        uint256[] storage tokenIds = auctionTokenIds[nftContract];\\n        for (uint256 i = 0; i < tokenIds.length; i++) {\\n            if (tokenIds[i] == tokenId) {\\n                tokenIds[i] = tokenIds[tokenIds.length - 1];\\n                tokenIds.pop();\\n                break;\\n            }\\n        }\\n\\n        if (auctionTokenIds[nftContract].length == 0) {\\n            for (uint256 i = 0; i < auctionContracts.length; i++) {\\n                if (auctionContracts[i] == nftContract) {\\n                    auctionContracts[i] = auctionContracts[auctionContracts.length - 1];\\n                    auctionContracts.pop();\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0xae7a8dbd6c69f2f8ba496dc67e9b4eb13bfa0a121eb98dcfe660134907e64038\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611b40380380611b4083398101604081905261002f9161005d565b6001600055600580546001600160a01b0319166001600160a01b039390931692909217909155600655610097565b6000806040838503121561007057600080fd5b82516001600160a01b038116811461008757600080fd5b6020939093015192949293505050565b611a9a806100a66000396000f3fe6080604052600436106100c25760003560e01c8063762a66a21161007f578063a4ed878911610059578063a4ed878914610308578063cbd2bdfd14610328578063d6518ad51461033d578063d98b9bb51461039557600080fd5b8063762a66a2146102535780637fd6f15c1461028057806392a7d2e61461029657600080fd5b80632dee466d146100c75780632ebc76e7146100f257806344f91c1e1461012057806346904840146101d95780635138b08c1461021157806361beb1d714610233575b600080fd5b3480156100d357600080fd5b506100dc6103a8565b6040516100e9919061187c565b60405180910390f35b3480156100fe57600080fd5b5061011261010d3660046118e2565b61064a565b6040519081526020016100e9565b34801561012c57600080fd5b5061019361013b3660046118e2565b600160208181526000938452604080852090915291835291208054918101546002820154600383015460048401546005909401546001600160a01b0395861695938416949293919260ff811692610100909104169087565b604080516001600160a01b039889168152968816602088015286019490945260608501929092521515608084015290921660a082015260c081019190915260e0016100e9565b3480156101e557600080fd5b506005546101f9906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b34801561021d57600080fd5b5061023161022c3660046118e2565b61067b565b005b34801561023f57600080fd5b5061023161024e36600461190e565b610c13565b34801561025f57600080fd5b5061027361026e3660046118e2565b6110a4565b6040516100e99190611949565b34801561028c57600080fd5b5061011260065481565b3480156102a257600080fd5b506101936102b13660046118e2565b600260208181526000938452604080852090915291835291208054600182015492820154600383015460048401546005909401546001600160a01b03938416958416949293919260ff811692610100909104169087565b34801561031457600080fd5b506101f9610323366004611957565b611130565b34801561033457600080fd5b506100dc61115a565b34801561034957600080fd5b506103856103583660046118e2565b6001600160a01b039190911660009081526002602090815260408083209383529290522060030154151590565b60405190151581526020016100e9565b6102316103a33660046118e2565b611374565b60606000805b600354811015610489576000600382815481106103cd576103cd611970565b60009182526020808320909101546001600160a01b0316808352600490915260408220909250905b8154811015610473576001600160a01b0383166000908152600160205260408120835490919084908490811061042d5761042d611970565b6000918252602080832090910154835282019290925260400190206004015460ff16610461578461045d8161199c565b9550505b8061046b8161199c565b9150506103f5565b50505080806104819061199c565b9150506103ae565b508067ffffffffffffffff8111156104a3576104a36119b5565b6040519080825280602002602001820160405280156104dc57816020015b6104c96117ec565b8152602001906001900390816104c15790505b5091506000805b6003548110156106445760006003828154811061050257610502611970565b60009182526020808320909101546001600160a01b0316808352600490915260408220909250905b815481101561062e576001600160a01b03831660009081526001602052604081208354829085908590811061056157610561611970565b600091825260208083209091015483528201929092526040019020600481015490915060ff1661061b576040805160e08101825282546001600160a01b03908116825260018401548116602083015260028401549282019290925260038301546060820152600483015460ff811615156080830152610100900490911660a0820152600582015460c0820152885189908890811061060157610601611970565b602002602001018190525085806106179061199c565b9650505b50806106268161199c565b91505061052a565b505050808061063c9061199c565b9150506104e3565b50505090565b6004602052816000526040600020818154811061066657600080fd5b90600052602060002001600091509150505481565b6106836115c5565b6001600160a01b0382166000908152600160209081526040808320848452909152902060038101546106f55760405162461bcd60e51b8152602060048201526016602482015275105d58dd1a5bdb88191bd95cc81b9bdd08195e1a5cdd60521b60448201526064015b60405180910390fd5b806003015442101561073d5760405162461bcd60e51b8152602060048201526011602482015270105d58dd1a5bdb881b9bdd08195b991959607a1b60448201526064016106ec565b600481015460ff16156107925760405162461bcd60e51b815260206004820152601760248201527f41756374696f6e20616c726561647920736574746c656400000000000000000060448201526064016106ec565b80546001600160a01b03163314806107b6575060018101546001600160a01b031633145b6108285760405162461bcd60e51b815260206004820152603860248201527f4f6e6c79207468652073656c6c6572206f72206869676865737420626964646560448201527f722063616e20736574746c65207468652061756374696f6e000000000000000060648201526084016106ec565b60048101805460ff19166001179055600281015415801590610856575060018101546001600160a01b031615155b15610a40576000612710600654836002015461087291906119cb565b61087c91906119e2565b905060008183600201546108909190611a04565b6005546040519192506000916001600160a01b039091169084908381818185875af1925050503d80600081146108e2576040519150601f19603f3d011682016040523d82523d6000602084013e6108e7565b606091505b505090508061092e5760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b60448201526064016106ec565b83546040516000916001600160a01b03169084908381818185875af1925050503d806000811461097a576040519150601f19603f3d011682016040523d82523d6000602084013e61097f565b606091505b50509050806109c95760405162461bcd60e51b815260206004820152601660248201527514d95b1b195c881d1c985b9cd9995c8819985a5b195960521b60448201526064016106ec565b60018501546040516323b872dd60e01b81523060048201526001600160a01b03918216602482015260448101889052908816906323b872dd90606401600060405180830381600087803b158015610a1f57600080fd5b505af1158015610a33573d6000803e3d6000fd5b5050505050505050610aac565b80546040516323b872dd60e01b81523060048201526001600160a01b03918216602482015260448101849052908416906323b872dd90606401600060405180830381600087803b158015610a9357600080fd5b505af1158015610aa7573d6000803e3d6000fd5b505050505b6001600160a01b0380841660008181526002602081815260408084208885528252808420875481546001600160a01b03199081169189169190911782556001808a015481840180548416918b16919091179055858a0154838701556003808b0154818501556004808c018054828701805460ff909216151560ff19831681178255925461010090819004909e16909d02610100600160a81b03199092166001600160a81b03199182161791909117909b556005808d0154958101959095559888528186528488208c8952909552928620805482168155928301805490911690559281018490559081018390559283018054909416909355910155610bb083836115ef565b60018101546002820154604080516001600160a01b039384168152602081019290925284928616917f9af6d97b361e7a9fb2831b01b64c355a9e8ccde63002f427e48a9ac03c6a19a291015b60405180910390a350610c0f6001600055565b5050565b6001600160a01b038416600090815260016020908152604080832086845290915290206003015415610c805760405162461bcd60e51b815260206004820152601660248201527541756374696f6e20616c72656164792065786973747360501b60448201526064016106ec565b60008211610cdf5760405162461bcd60e51b815260206004820152602660248201527f5374617274696e6720626964206d7573742062652067726561746572207468616044820152656e207a65726f60d01b60648201526084016106ec565b60008111610d3a5760405162461bcd60e51b815260206004820152602260248201527f4475726174696f6e206d7573742062652067726561746572207468616e207a65604482015261726f60f01b60648201526084016106ec565b6040516331a9108f60e11b815260048101849052849033906001600160a01b03831690636352211e90602401602060405180830381865afa158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da79190611a17565b6001600160a01b031614610df15760405162461bcd60e51b81526020600482015260116024820152702737ba103a34329027232a1037bbb732b960791b60448201526064016106ec565b6040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b038216906323b872dd90606401600060405180830381600087803b158015610e3f57600080fd5b505af1158015610e53573d6000803e3d6000fd5b5050505060008242610e659190611a3b565b90506040518060e00160405280336001600160a01b0316815260200160006001600160a01b03168152602001858152602001828152602001600015158152602001876001600160a01b031681526020018681525060016000886001600160a01b03166001600160a01b03168152602001908152602001600020600087815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816005015590505060046000876001600160a01b03166001600160a01b031681526020019081526020016000208054905060000361103357600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b038616600081815260046020908152604080832080546001810182559084529282902090920188905581518481529081018790528792917fbfc2001685f147773956c30c745f1b33e40df1ad4c1084b4d39c7c41bb7f6685910160405180910390a3505050505050565b6110ac6117ec565b506001600160a01b038083166000908152600160208181526040808420868552825292839020835160e0810185528154861681529281015485169183019190915260028101549282019290925260038201546060820152600482015460ff811615156080830152610100900490921660a08301526005015460c08201525b92915050565b6003818154811061114057600080fd5b6000918252602090912001546001600160a01b0316905081565b60606000805b6003548110156111c457600460006003838154811061118157611181611970565b60009182526020808320909101546001600160a01b031683528201929092526040019020546111b09083611a3b565b9150806111bc8161199c565b915050611160565b508067ffffffffffffffff8111156111de576111de6119b5565b60405190808252806020026020018201604052801561121757816020015b6112046117ec565b8152602001906001900390816111fc5790505b5091506000805b6003548110156106445760006003828154811061123d5761123d611970565b60009182526020808320909101546001600160a01b0316808352600490915260408220909250905b815481101561135e576001600160a01b0383166000908152600160205260408120835490919084908490811061129d5761129d611970565b600091825260208083209091015483528281019390935260409182019020815160e08101835281546001600160a01b039081168252600183015481169482019490945260028201549281019290925260038101546060830152600481015460ff811615156080840152610100900490921660a082015260059091015460c0820152875188908790811061133257611332611970565b602002602001018190525084806113489061199c565b95505080806113569061199c565b915050611265565b505050808061136c9061199c565b91505061121e565b61137c6115c5565b6001600160a01b03821660009081526001602090815260408083208484529091529020600381015442106113e25760405162461bcd60e51b815260206004820152600d60248201526c105d58dd1a5bdb88195b991959609a1b60448201526064016106ec565b80546001600160a01b0316330361144a5760405162461bcd60e51b815260206004820152602660248201527f53656c6c65722063616e6e6f7420626964206f6e207468656972206f776e20616044820152653ab1ba34b7b760d11b60648201526084016106ec565b8060020154341161148b5760405162461bcd60e51b815260206004820152600b60248201526a42696420746f6f206c6f7760a81b60448201526064016106ec565b600081600201541180156114ab575060018101546001600160a01b031615155b1561156257600181015460028201546040516001600160a01b0390921691600090839083908381818185875af1925050503d8060008114611508576040519150601f19603f3d011682016040523d82523d6000602084013e61150d565b606091505b505090508061155e5760405162461bcd60e51b815260206004820181905260248201527f526566756e6420746f2070726576696f757320626964646572206661696c656460448201526064016106ec565b5050505b34600282018190556001820180546001600160a01b0319163390811790915560408051918252602082019290925283916001600160a01b038616917f0158f5674dc243762459b88cfc91b10d2d1ef9d40821cca978c2b680aa4446829101610bfc565b6002600054036115e857604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6001600160a01b0382166000908152600460205260408120905b81548110156116bd578282828154811061162557611625611970565b9060005260206000200154036116ab578154829061164590600190611a04565b8154811061165557611655611970565b906000526020600020015482828154811061167257611672611970565b90600052602060002001819055508180548061169057611690611a4e565b600190038181906000526020600020016000905590556116bd565b806116b58161199c565b915050611609565b506001600160a01b03831660009081526004602052604081205490036117e75760005b6003548110156117e557836001600160a01b03166003828154811061170757611707611970565b6000918252602090912001546001600160a01b0316036117d3576003805461173190600190611a04565b8154811061174157611741611970565b600091825260209091200154600380546001600160a01b03909216918390811061176d5761176d611970565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060038054806117ac576117ac611a4e565b600082815260209020810160001990810180546001600160a01b03191690550190556117e5565b806117dd8161199c565b9150506116e0565b505b505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b60018060a01b0380825116835280602083015116602084015260408201516040840152606082015160608401526080820151151560808401528060a08301511660a08401525060c081015160c08301525050565b6020808252825182820181905260009190848201906040850190845b818110156118be576118ab838551611828565b9284019260e09290920191600101611898565b50909695505050505050565b6001600160a01b03811681146118df57600080fd5b50565b600080604083850312156118f557600080fd5b8235611900816118ca565b946020939093013593505050565b6000806000806080858703121561192457600080fd5b843561192f816118ca565b966020860135965060408601359560600135945092505050565b60e0810161112a8284611828565b60006020828403121561196957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016119ae576119ae611986565b5060010190565b634e487b7160e01b600052604160045260246000fd5b808202811582820484141761112a5761112a611986565b6000826119ff57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561112a5761112a611986565b600060208284031215611a2957600080fd5b8151611a34816118ca565b9392505050565b8082018082111561112a5761112a611986565b634e487b7160e01b600052603160045260246000fdfea264697066735822122019d8702faf7c1d8f085faddd1c854d6a8f34b56527a3be4c5904639e8849592964736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c8063762a66a21161007f578063a4ed878911610059578063a4ed878914610308578063cbd2bdfd14610328578063d6518ad51461033d578063d98b9bb51461039557600080fd5b8063762a66a2146102535780637fd6f15c1461028057806392a7d2e61461029657600080fd5b80632dee466d146100c75780632ebc76e7146100f257806344f91c1e1461012057806346904840146101d95780635138b08c1461021157806361beb1d714610233575b600080fd5b3480156100d357600080fd5b506100dc6103a8565b6040516100e9919061187c565b60405180910390f35b3480156100fe57600080fd5b5061011261010d3660046118e2565b61064a565b6040519081526020016100e9565b34801561012c57600080fd5b5061019361013b3660046118e2565b600160208181526000938452604080852090915291835291208054918101546002820154600383015460048401546005909401546001600160a01b0395861695938416949293919260ff811692610100909104169087565b604080516001600160a01b039889168152968816602088015286019490945260608501929092521515608084015290921660a082015260c081019190915260e0016100e9565b3480156101e557600080fd5b506005546101f9906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b34801561021d57600080fd5b5061023161022c3660046118e2565b61067b565b005b34801561023f57600080fd5b5061023161024e36600461190e565b610c13565b34801561025f57600080fd5b5061027361026e3660046118e2565b6110a4565b6040516100e99190611949565b34801561028c57600080fd5b5061011260065481565b3480156102a257600080fd5b506101936102b13660046118e2565b600260208181526000938452604080852090915291835291208054600182015492820154600383015460048401546005909401546001600160a01b03938416958416949293919260ff811692610100909104169087565b34801561031457600080fd5b506101f9610323366004611957565b611130565b34801561033457600080fd5b506100dc61115a565b34801561034957600080fd5b506103856103583660046118e2565b6001600160a01b039190911660009081526002602090815260408083209383529290522060030154151590565b60405190151581526020016100e9565b6102316103a33660046118e2565b611374565b60606000805b600354811015610489576000600382815481106103cd576103cd611970565b60009182526020808320909101546001600160a01b0316808352600490915260408220909250905b8154811015610473576001600160a01b0383166000908152600160205260408120835490919084908490811061042d5761042d611970565b6000918252602080832090910154835282019290925260400190206004015460ff16610461578461045d8161199c565b9550505b8061046b8161199c565b9150506103f5565b50505080806104819061199c565b9150506103ae565b508067ffffffffffffffff8111156104a3576104a36119b5565b6040519080825280602002602001820160405280156104dc57816020015b6104c96117ec565b8152602001906001900390816104c15790505b5091506000805b6003548110156106445760006003828154811061050257610502611970565b60009182526020808320909101546001600160a01b0316808352600490915260408220909250905b815481101561062e576001600160a01b03831660009081526001602052604081208354829085908590811061056157610561611970565b600091825260208083209091015483528201929092526040019020600481015490915060ff1661061b576040805160e08101825282546001600160a01b03908116825260018401548116602083015260028401549282019290925260038301546060820152600483015460ff811615156080830152610100900490911660a0820152600582015460c0820152885189908890811061060157610601611970565b602002602001018190525085806106179061199c565b9650505b50806106268161199c565b91505061052a565b505050808061063c9061199c565b9150506104e3565b50505090565b6004602052816000526040600020818154811061066657600080fd5b90600052602060002001600091509150505481565b6106836115c5565b6001600160a01b0382166000908152600160209081526040808320848452909152902060038101546106f55760405162461bcd60e51b8152602060048201526016602482015275105d58dd1a5bdb88191bd95cc81b9bdd08195e1a5cdd60521b60448201526064015b60405180910390fd5b806003015442101561073d5760405162461bcd60e51b8152602060048201526011602482015270105d58dd1a5bdb881b9bdd08195b991959607a1b60448201526064016106ec565b600481015460ff16156107925760405162461bcd60e51b815260206004820152601760248201527f41756374696f6e20616c726561647920736574746c656400000000000000000060448201526064016106ec565b80546001600160a01b03163314806107b6575060018101546001600160a01b031633145b6108285760405162461bcd60e51b815260206004820152603860248201527f4f6e6c79207468652073656c6c6572206f72206869676865737420626964646560448201527f722063616e20736574746c65207468652061756374696f6e000000000000000060648201526084016106ec565b60048101805460ff19166001179055600281015415801590610856575060018101546001600160a01b031615155b15610a40576000612710600654836002015461087291906119cb565b61087c91906119e2565b905060008183600201546108909190611a04565b6005546040519192506000916001600160a01b039091169084908381818185875af1925050503d80600081146108e2576040519150601f19603f3d011682016040523d82523d6000602084013e6108e7565b606091505b505090508061092e5760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b60448201526064016106ec565b83546040516000916001600160a01b03169084908381818185875af1925050503d806000811461097a576040519150601f19603f3d011682016040523d82523d6000602084013e61097f565b606091505b50509050806109c95760405162461bcd60e51b815260206004820152601660248201527514d95b1b195c881d1c985b9cd9995c8819985a5b195960521b60448201526064016106ec565b60018501546040516323b872dd60e01b81523060048201526001600160a01b03918216602482015260448101889052908816906323b872dd90606401600060405180830381600087803b158015610a1f57600080fd5b505af1158015610a33573d6000803e3d6000fd5b5050505050505050610aac565b80546040516323b872dd60e01b81523060048201526001600160a01b03918216602482015260448101849052908416906323b872dd90606401600060405180830381600087803b158015610a9357600080fd5b505af1158015610aa7573d6000803e3d6000fd5b505050505b6001600160a01b0380841660008181526002602081815260408084208885528252808420875481546001600160a01b03199081169189169190911782556001808a015481840180548416918b16919091179055858a0154838701556003808b0154818501556004808c018054828701805460ff909216151560ff19831681178255925461010090819004909e16909d02610100600160a81b03199092166001600160a81b03199182161791909117909b556005808d0154958101959095559888528186528488208c8952909552928620805482168155928301805490911690559281018490559081018390559283018054909416909355910155610bb083836115ef565b60018101546002820154604080516001600160a01b039384168152602081019290925284928616917f9af6d97b361e7a9fb2831b01b64c355a9e8ccde63002f427e48a9ac03c6a19a291015b60405180910390a350610c0f6001600055565b5050565b6001600160a01b038416600090815260016020908152604080832086845290915290206003015415610c805760405162461bcd60e51b815260206004820152601660248201527541756374696f6e20616c72656164792065786973747360501b60448201526064016106ec565b60008211610cdf5760405162461bcd60e51b815260206004820152602660248201527f5374617274696e6720626964206d7573742062652067726561746572207468616044820152656e207a65726f60d01b60648201526084016106ec565b60008111610d3a5760405162461bcd60e51b815260206004820152602260248201527f4475726174696f6e206d7573742062652067726561746572207468616e207a65604482015261726f60f01b60648201526084016106ec565b6040516331a9108f60e11b815260048101849052849033906001600160a01b03831690636352211e90602401602060405180830381865afa158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da79190611a17565b6001600160a01b031614610df15760405162461bcd60e51b81526020600482015260116024820152702737ba103a34329027232a1037bbb732b960791b60448201526064016106ec565b6040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b038216906323b872dd90606401600060405180830381600087803b158015610e3f57600080fd5b505af1158015610e53573d6000803e3d6000fd5b5050505060008242610e659190611a3b565b90506040518060e00160405280336001600160a01b0316815260200160006001600160a01b03168152602001858152602001828152602001600015158152602001876001600160a01b031681526020018681525060016000886001600160a01b03166001600160a01b03168152602001908152602001600020600087815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816005015590505060046000876001600160a01b03166001600160a01b031681526020019081526020016000208054905060000361103357600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b038616600081815260046020908152604080832080546001810182559084529282902090920188905581518481529081018790528792917fbfc2001685f147773956c30c745f1b33e40df1ad4c1084b4d39c7c41bb7f6685910160405180910390a3505050505050565b6110ac6117ec565b506001600160a01b038083166000908152600160208181526040808420868552825292839020835160e0810185528154861681529281015485169183019190915260028101549282019290925260038201546060820152600482015460ff811615156080830152610100900490921660a08301526005015460c08201525b92915050565b6003818154811061114057600080fd5b6000918252602090912001546001600160a01b0316905081565b60606000805b6003548110156111c457600460006003838154811061118157611181611970565b60009182526020808320909101546001600160a01b031683528201929092526040019020546111b09083611a3b565b9150806111bc8161199c565b915050611160565b508067ffffffffffffffff8111156111de576111de6119b5565b60405190808252806020026020018201604052801561121757816020015b6112046117ec565b8152602001906001900390816111fc5790505b5091506000805b6003548110156106445760006003828154811061123d5761123d611970565b60009182526020808320909101546001600160a01b0316808352600490915260408220909250905b815481101561135e576001600160a01b0383166000908152600160205260408120835490919084908490811061129d5761129d611970565b600091825260208083209091015483528281019390935260409182019020815160e08101835281546001600160a01b039081168252600183015481169482019490945260028201549281019290925260038101546060830152600481015460ff811615156080840152610100900490921660a082015260059091015460c0820152875188908790811061133257611332611970565b602002602001018190525084806113489061199c565b95505080806113569061199c565b915050611265565b505050808061136c9061199c565b91505061121e565b61137c6115c5565b6001600160a01b03821660009081526001602090815260408083208484529091529020600381015442106113e25760405162461bcd60e51b815260206004820152600d60248201526c105d58dd1a5bdb88195b991959609a1b60448201526064016106ec565b80546001600160a01b0316330361144a5760405162461bcd60e51b815260206004820152602660248201527f53656c6c65722063616e6e6f7420626964206f6e207468656972206f776e20616044820152653ab1ba34b7b760d11b60648201526084016106ec565b8060020154341161148b5760405162461bcd60e51b815260206004820152600b60248201526a42696420746f6f206c6f7760a81b60448201526064016106ec565b600081600201541180156114ab575060018101546001600160a01b031615155b1561156257600181015460028201546040516001600160a01b0390921691600090839083908381818185875af1925050503d8060008114611508576040519150601f19603f3d011682016040523d82523d6000602084013e61150d565b606091505b505090508061155e5760405162461bcd60e51b815260206004820181905260248201527f526566756e6420746f2070726576696f757320626964646572206661696c656460448201526064016106ec565b5050505b34600282018190556001820180546001600160a01b0319163390811790915560408051918252602082019290925283916001600160a01b038616917f0158f5674dc243762459b88cfc91b10d2d1ef9d40821cca978c2b680aa4446829101610bfc565b6002600054036115e857604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6001600160a01b0382166000908152600460205260408120905b81548110156116bd578282828154811061162557611625611970565b9060005260206000200154036116ab578154829061164590600190611a04565b8154811061165557611655611970565b906000526020600020015482828154811061167257611672611970565b90600052602060002001819055508180548061169057611690611a4e565b600190038181906000526020600020016000905590556116bd565b806116b58161199c565b915050611609565b506001600160a01b03831660009081526004602052604081205490036117e75760005b6003548110156117e557836001600160a01b03166003828154811061170757611707611970565b6000918252602090912001546001600160a01b0316036117d3576003805461173190600190611a04565b8154811061174157611741611970565b600091825260209091200154600380546001600160a01b03909216918390811061176d5761176d611970565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060038054806117ac576117ac611a4e565b600082815260209020810160001990810180546001600160a01b03191690550190556117e5565b806117dd8161199c565b9150506116e0565b505b505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b60018060a01b0380825116835280602083015116602084015260408201516040840152606082015160608401526080820151151560808401528060a08301511660a08401525060c081015160c08301525050565b6020808252825182820181905260009190848201906040850190845b818110156118be576118ab838551611828565b9284019260e09290920191600101611898565b50909695505050505050565b6001600160a01b03811681146118df57600080fd5b50565b600080604083850312156118f557600080fd5b8235611900816118ca565b946020939093013593505050565b6000806000806080858703121561192457600080fd5b843561192f816118ca565b966020860135965060408601359560600135945092505050565b60e0810161112a8284611828565b60006020828403121561196957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016119ae576119ae611986565b5060010190565b634e487b7160e01b600052604160045260246000fd5b808202811582820484141761112a5761112a611986565b6000826119ff57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561112a5761112a611986565b600060208284031215611a2957600080fd5b8151611a34816118ca565b9392505050565b8082018082111561112a5761112a611986565b634e487b7160e01b600052603160045260246000fdfea264697066735822122019d8702faf7c1d8f085faddd1c854d6a8f34b56527a3be4c5904639e8849592964736f6c63430008140033",
  "devdoc": {
    "errors": {
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1584,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 5541,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "auctions",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)5534_storage))"
      },
      {
        "astId": 5548,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "settledAuctions",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)5534_storage))"
      },
      {
        "astId": 5551,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "auctionContracts",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 5556,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "auctionTokenIds",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 5558,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "feeRecipient",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 5560,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "feePercent",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)5534_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NFTAuction.Auction))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Auction)5534_storage)"
      },
      "t_mapping(t_uint256,t_struct(Auction)5534_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NFTAuction.Auction)",
        "numberOfBytes": "32",
        "value": "t_struct(Auction)5534_storage"
      },
      "t_struct(Auction)5534_storage": {
        "encoding": "inplace",
        "label": "struct NFTAuction.Auction",
        "members": [
          {
            "astId": 5521,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5523,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "highestBidder",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 5525,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "highestBid",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5527,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "endTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 5529,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "settled",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 5531,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "nftContract",
            "offset": 1,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 5533,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "tokenId",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}